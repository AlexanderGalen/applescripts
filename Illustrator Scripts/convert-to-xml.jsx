#target illustratorfunction sortPaths(a, b) {	if(a.top != b.top ) {		return b.top-a.top;	}	else {		return a.left-b.left;	}}var thisDoc = activeDocument;var pathItems = thisDoc.pathItems;var sortedItems = []for(var i=0; i < pathItems.length; i++) {	var thisItem = pathItems[i];	sortedItems.push(thisItem);}sortedItems.sort(sortPaths);function makeXML(id, x1, y1, x2, y2) {	return <frame id={id} rect={x1 + " " + y1 + " " + x2 + " " + y2}/>}function getId() {	var colName = ""	switch(currentCol) {		case 1:			colName = "a";			break;		case 2:			colName = "b";			break;		case 3:			colName = "c";			break;		case 4:			colName = "d";			break;		case 5:			colName = "e";			break;		case 6:			colName = "f";			break;		case 7:			colName = "g";			break;		case 8:			colName = "h";			break;		case 9:			colName = "i";			break;		case 10:			colName = "j";			break;		default:			colName = "zzzzz"	}	return colName + currentRow}var currentRow = 1;var currentCol = 0;var currentX = Math.round(sortedItems[0].left * 1000)/1000;var tempy2 = Math.round(sortedItems[0].top * 1000)/1000;var currentY = Math.round((tempy2 - sortedItems[0].height) * 1000)/1000;var root = <resources>	</resources>var currentFrame = 0;for(var j=0;j<sortedItems.length; j++) {		var thisItem = sortedItems[j];	var x1 = Math.round(thisItem.left * 1000)/1000;	var x2 = Math.round((x1 + thisItem.width) * 1000)/1000;	var y2 = Math.round(thisItem.top * 1000)/1000;	var y1 = Math.round((y2 - thisItem.height) * 1000)/1000;		// if our y decreased, we are on the next row	if (currentY > y1 ) {		currentRow++		currentCol = 1;	}	// if not, just increase the column	else {		currentCol++	}		// update currentx and currenty	currentX = x1;	currentY = y1;		id = getId()		root.frame[currentFrame++] = makeXML(id, x1, y1, x2, y2)}$.write(root)// 113.759 1611 275.759 1343.078